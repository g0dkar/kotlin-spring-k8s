/*
 * This file is generated by jOOQ.
 */
package com.g0dkar.samplek8sproj.persistence.jooq.tables.records;


import com.g0dkar.samplek8sproj.persistence.jooq.tables.VisitorTypeEnum;

import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitorTypeEnumRecord extends UpdatableRecordImpl<VisitorTypeEnumRecord> implements Record3<Integer, String, OffsetDateTime> {

    private static final long serialVersionUID = -1585943053;

    /**
     * Setter for <code>public.visitor_type_enum.id</code>.
     */
    public VisitorTypeEnumRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.visitor_type_enum.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.visitor_type_enum.name</code>.
     */
    public VisitorTypeEnumRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.visitor_type_enum.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.visitor_type_enum.created</code>.
     */
    public VisitorTypeEnumRecord setCreated(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.visitor_type_enum.created</code>.
     */
    public OffsetDateTime getCreated() {
        return (OffsetDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, OffsetDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, OffsetDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return VisitorTypeEnum.VISITOR_TYPE_ENUM.ID;
    }

    @Override
    public Field<String> field2() {
        return VisitorTypeEnum.VISITOR_TYPE_ENUM.NAME;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return VisitorTypeEnum.VISITOR_TYPE_ENUM.CREATED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public OffsetDateTime component3() {
        return getCreated();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public OffsetDateTime value3() {
        return getCreated();
    }

    @Override
    public VisitorTypeEnumRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public VisitorTypeEnumRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public VisitorTypeEnumRecord value3(OffsetDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public VisitorTypeEnumRecord values(Integer value1, String value2, OffsetDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VisitorTypeEnumRecord
     */
    public VisitorTypeEnumRecord() {
        super(VisitorTypeEnum.VISITOR_TYPE_ENUM);
    }

    /**
     * Create a detached, initialised VisitorTypeEnumRecord
     */
    public VisitorTypeEnumRecord(Integer id, String name, OffsetDateTime created) {
        super(VisitorTypeEnum.VISITOR_TYPE_ENUM);

        set(0, id);
        set(1, name);
        set(2, created);
    }
}
